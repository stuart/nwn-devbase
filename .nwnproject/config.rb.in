#!/usr/bin/ruby

# Copy this file to config.rb to change any constants.

# Returns the first file with .mod extension in the module directory.
def find_modfile()
  mod = FileList[MODULE_DIR.join("*.mod")].first
  return (mod.nil? || mod == "") ? MODULE_DIR.join("module.mod") : mod
end

HOME_DIR ||= file_exists(PROJECT_ROOT.join("homedir")) || PROJECT_ROOT.join("server")
INSTALL_DIR ||= file_exists(PROJECT_ROOT.join("installdir")) || file_exists(PROJECT_ROOT.join("NWN")) || ENV["NWN_INSTALLDIR"]
MODULE_DIR ||= HOME_DIR.join("modules")
MODULE_FILE ||= find_modfile
CACHE_DIR ||= NWNPROJECT.join("cache")
TMP_CACHE_DIR ||= CACHE_DIR.join("tmp")
GFF_CACHE_DIR ||= CACHE_DIR.join("gff")
SRC_DIR ||= PROJECT_ROOT.join("src")
RESMAN_DIR ||= PROJECT_ROOT.join("resman")
EXTRACT_RAKE ||=  file_exists(PROJECT_ROOT.join("extract.rake")) || file_exists(EXECUTION_DIR.join("extract.rake"))
PACK_RAKE ||=  file_exists(PROJECT_ROOT.join("pack.rake")) || file_exists(EXECUTION_DIR.join("pack.rake"))
SYMLINK_RAKE ||=  file_exists(PROJECT_ROOT.join("symlink.rake")) || file_exists(EXECUTION_DIR.join("symlink.rake"))

ERF_UTIL ||= "nwn_erf"
GFF_UTIL ||= "nwn-gff"
SCRIPTS_DIR ||= PROJECT_ROOT.join("scripts")
NSS_COMPILER ||= ENV["NSS_COMPILER"] || "nwnsc"
COMPILER_ARGS ||= ["-qo", "-n", "#{INSTALL_DIR}", "-y", "-b", "#{GFF_CACHE_DIR}"]
